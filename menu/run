#!/bin/bash
show_menu(){
    normal=`echo "\033[m"`
    menu=`echo "\033[36m"` #Blue
    number=`echo "\033[33m"` #yellow
    fggreen=`echo "\e[92m"`
    fgred=`echo "\033[31m"`
    
    version="1.8"

    mitems=(
           "Medium - Defense Evasion via Masquerading"
           "Critical - Defense Evasion via Rootkit"
           "High - Execution via Command-Line Interface"
           "High - Exfiltration Over Alternative Protocol"
           "High -$fggreen Command & Control via Remote Access Tools"
           "High - Collection via Automated Collection"
           "High - Credential Access via Credential Dumping"
           "High -$fggreen Persistance via External Remote Services"
           "High -$fggreen Malware Linux Trojan"
           "High -Webserver Suspicious Terminal Spawn"
           "High -Webserver Unexpected Child of Web Service"
           "High -$fggreen Webserver Bash Reverse Shell"
           "Medium - Webserver Trigger Metasploit Payload"
           )

    edir='/home/eval/bin/'

    eitems=(
           "Defense_Evasion_via_Masquerading.sh"
           "Defense_Evasion_via_Rootkit.sh"
           "Execution_via_Command-Line_Interface.sh"
           "Exfiltration_via_Exfiltration_Over_Alternative_Protocol.sh > /dev/null 2>&1"
           "Command_Control_via_Remote_Access.sh"
           "Collection_via_Automated_Collection.sh"
           "Credential_Access_via_Credential_Dumping.sh" 
           "Persistence_via_External_Remote_Services.sh"
           "Malware_Linux_Trojan.sh"
           "Webserver_Suspicious_Terminal_Spawn.sh"
           "Webserver_Unexpected_Child_of_Web_Service.sh"
	   "Webserver_Bash_Reverse_Shell.sh"
           "metasploit/Webserver_Trigger_Metasploit_Payload.sh"
           )
    numitems=${#mitems[@]}

    printf "${fgred}V${version}${normal}\n"
    printf "\n${menu}     Select one of the following TTPs${normal}\n"
    printf "\n${menu}*********************************************${normal}\n"

    for (( i=1; i<=$numitems; i++ ))
    do
	    j=i-1
	    printf "${menu}**${number} ${i})${menu} ${mitems[$j]} ${normal}\n"
    done

    printf "\n"
    printf "${menu}**${number} a)${menu} Automatically run random scripts${normal}\n"
    printf "${menu}**${number} o)${menu} Generate Overwatch test detection${normal}\n"
    printf "\n"
    printf "${menu}**${number} e)${menu} Exit to Container shell${normal}\n"
    printf "${menu}**${number} x)${menu} Exit Container${normal}\n"
    printf "${menu}*********************************************${normal}\n"
    printf "Please enter a menu option and enter: "
    read  opt
}

after_exec(){
	read -p "Press enter to continue";
	clear;
	show_menu;
}

option_picked(){
    msgcolor=`echo "\033[01;31m"` # bold red
    normal=`echo "\033[00;00m"` # normal white
    message=${@:-"${normal}Error: No message passed"}
    printf "${msgcolor}${message}${normal}\n"
}

clear
show_menu
while  true
    do
        # Check to see if our value is a number
        if [ -n "$opt" ] && [ "$opt" -eq "$opt" ] 2>/dev/null; then
           is_num=1
        else
           is_num=0
        fi

    if [ $opt = '' ]; then
      exit;

    elif (( $is_num > 0 )); then

        if ((0 <= $opt && $opt <= $numitems)); then
            clear;
            m=$opt-1
            option_picked "$opt - ${mitems[$m]}"
	    sh -c echo CS_testcontainer
            $edir${eitems[$m]};
            after_exec;

        else
            clear;
            option_picked "Pick a valid option from the menu";
            show_menu;
        fi

    else
      # The option was not a number
      case $opt in
        a) clear;
            option_picked "This script will automatically generate random events at ransom interval (30 minutes max). Type <Ctrl-C> to return to menu";
            ../menu/auto;
            show_menu;
        ;;

        o) clear;
            option_picked "This menu will create a Falcon Overwatch test detection";
            ../menu/ow;
	    clear;
            show_menu;
        ;;

        e) clear;
            option_picked "Type exit to return to menu";
            /bin/bash;
            show_menu;
        ;;

        x)exit;
        ;;

        \n)exit;
        ;;

        *)clear;
            option_picked "Pick a valid option from the menu";
            show_menu;
        ;;
      esac
    fi
done
